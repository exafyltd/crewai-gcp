      - name: Smoke test Cloud Run service (try all candidate URLs)
        shell: bash
        run: |
          set -euo pipefail

          SERVICE="${SERVICE:-crewai-gcp}"
          REGION="${REGION:-europe-west1}"
          PROJECT_ID="${PROJECT_ID:-lovable-vitana-vers1}"
          PROJECT_NUMBER="$(gcloud projects describe "$PROJECT_ID" --format='value(projectNumber)' || true)"

          echo "üîç Discovering Cloud Run URLs..."
          CANDIDATES=()

          # 1) Canonical URL from Cloud Run
          URL_MAIN="$(gcloud run services describe "$SERVICE" \
            --project="$PROJECT_ID" \
            --region="$REGION" \
            --format='value(status.url)' || true)"
          [[ -n "${URL_MAIN:-}" ]] && CANDIDATES+=("$URL_MAIN")

          # 2) All services in region
          while IFS= read -r u; do
            [[ -n "$u" ]] && CANDIDATES+=("$u")
          done < <(gcloud run services list \
            --project="$PROJECT_ID" \
            --region="$REGION" \
            --format='value(url)' || true)

          # 3) Historical & pattern guesses
          CANDIDATES+=(
            "https://crewai-gcp-86804897789.europe-west1.run.app"
            "https://crewai-gcp-q74ibpv6ia-ew.a.run.app"
            "https://${SERVICE}-${PROJECT_ID}.${REGION}.run.app"
            "https://${SERVICE}-${PROJECT_NUMBER}.${REGION}.run.app"
          )

          # Remove duplicates
          uniq() { awk '!seen[$0]++'; }
          mapfile -t CANDIDATES < <(printf "%s\n" "${CANDIDATES[@]}" | uniq)

          echo "üåê Candidate URLs to probe:"
          printf ' - %s\n' "${CANDIDATES[@]}"

          PASSED_URL=""
          PAYLOAD_FILE="$(mktemp)"

          for U in "${CANDIDATES[@]}"; do
            echo "üöÄ Probing: $U"
            if (curl -fsS "$U/" >"$PAYLOAD_FILE") \
            || (curl -fsS "$U/alive" >"$PAYLOAD_FILE") \
            || (curl -fsS "$U/healthz" >"$PAYLOAD_FILE"); then
              echo "‚úÖ Success at: $U"
              echo "Response:"
              cat "$PAYLOAD_FILE"
              PASSED_URL="$U"
              break
            else
              echo "‚ùå No success at: $U"
            fi
          done

          if [[ -z "$PASSED_URL" ]]; then
            echo "‚ùå No endpoint succeeded. Listing all attempts:"
            printf ' - %s\n' "${CANDIDATES[@]}"
            exit 22
          fi
