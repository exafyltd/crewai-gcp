name: Quick Gate â€” worker-core
on:
  workflow_dispatch:
  push:
    paths:
      - "services/agents/worker-core/**"
      - "crew_template/schemas/**"
      - ".github/workflows/worker-core-gate.yml"

jobs:
  gate:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }
    env:
      GCP_PROJECT: lovable-vitana-vers1
      GCP_REGION: us-central1
      SERVICE: worker-core

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - uses: google-github-actions/setup-gcloud@v2
        with: { project_id: ${{ env.GCP_PROJECT }}, export_default_credentials: true }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        working-directory: services/agents/worker-core
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || true

      - name: Schema parity (non-breaking only)
        run: |
          for s in plan result validation; do
            diff -u crew_template/schemas/$s.json services/agents/worker-core/schemas/$s.json || true
          done

      - name: Tests
        working-directory: services/agents/worker-core
        run: pytest -q

      - name: Deploy to Cloud Run (staging)
        working-directory: services/agents/worker-core
        run: |
          gcloud run deploy $SERVICE --source . --region ${GCP_REGION} --allow-unauthenticated --quiet
          gcloud run services update $SERVICE --region ${GCP_REGION} \
            --min-instances=1 --max-instances=5 --cpu=1 --memory=512Mi \
            --concurrency=40 --timeout=60s
          gcloud run services describe $SERVICE --region ${GCP_REGION} --format='value(status.url)' > /tmp/run_url

      - name: Warm and smoke tenants
        run: |
          RUN_URL=$(cat /tmp/run_url)
          for i in {1..5}; do curl -fsS "$RUN_URL/health" && break || sleep 2; done
          for t in maxina earthlings alkalma; do
            echo ">> tenant=$t"
            curl -fsS -X POST "$RUN_URL/execute" \
              -H 'Content-Type: application/json' \
              -d "{
                \"plan_id\":\"smoke-$t\",\"tenant\":\"$t\",
                \"tasks\":[{\"id\":\"t1\",\"skill\":\"router.invoke_llm\",\"input\":{\"prompt\":\"ping\"}}],
                \"budget\":{\"tokens_max\":1000,\"cost_max_usd\":0.10}
              }" | tee /tmp/smoke_$t.json
            jq -e '.status' /tmp/smoke_$t.json >/dev/null
          done
          

      - uses: actions/upload-artifact@v4
        with: { name: worker-core-smoke, path: /tmp/smoke_*.json }
